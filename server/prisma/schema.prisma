// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String    @id(map: "PK_e207aa15404e9b2ce35910f9f7f") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name  String
  email String    @unique
  password String?
  provider OAuth_enum @default(local)
  events Event[]

  @@index([email], map: "idx_email")
}

model Event {
  id        String       @id(map: "PK_e207aa15404e9b2ewee35910f9f7f") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String    @unique
  date      DateTime
  start     DateTime
  end       DateTime
  location  String?
  media     Media[]

  organizer      User      @relation(fields: [organizerId], references: [id], onDelete: Cascade)
  organizerId    String    @db.Uuid

  rsvps     RSVP[]

  @@index([date], map: "idx_date_time")
}

model Media {
  id        String       @id(map: "PK_e207aa15404e9b2ce35910f9freewf") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  eventId   String       @db.Uuid
  cloudinaryId String?
  imageUrl    String

  event      Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

model RSVP {
  id        String      @id(map: "PK_e207aa15404e9b2ce35910f9fruirhf") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  eventId   String      @db.Uuid
  guestName  String
  email     String   @unique
  // plusOnes  Int?

  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

enum OAuth_enum {
  local
  google
}

